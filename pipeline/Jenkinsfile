pipeline {
  agent { node { label "slave-jenkins" } }

  environment {
    NOW = new Date().format("yyyyMMDDHHmmss")

    CR_PAT = credentials('github-token')
    GITHUB_USER = "metroruby"

    ENV_CONFIG = "gsa-key.json"

    BASE_IMG_PUSH_URL = "ghcr.io/metroruby/node-app"
    IMAGE_TAG = "latest"

    SERVICE_NAME = "node-app"
  }

  stages {
    stage("Build & Packaging") {
      steps {
        script {
          nodejs('Node-12') {
            print "Build via NODE-12"
            sh "node -v && npm -v && npm install && ls -al"
            sh "docker-compose build"
            sh "docker tag ${BASE_IMG_PUSH_URL} ${BASE_IMG_PUSH_URL}:${IMAGE_TAG}"
            sh 'echo ${CR_PAT} | docker login ghcr.io -u ${GITHUB_USER} --password-stdin'
            sh "docker push -a ${BASE_IMG_PUSH_URL}"
          }
        }
      }
    }

    stage("Deploy") {
      steps {
        script {
          print "## helm update only value"
          configFileProvider([configFile(fileId: "${ENV_CONFIG}", variable: 'ENV_CONFIG')]) {
            sh 'cp "$ENV_CONFIG" gsa-key.json'
          }
          sh 'export GOOGLE_APPLICATION_CREDENTIALS=gsa-key.json'
          withKubeConfig([credentialsId: 'staging-app-k8s', serverUrl: 'https://35.197.154.217']) {
            sh "helm upgrade -f k8s/helm/values-staging.yaml ${SERVICE_NAME} ./helm-chart/helm-nodejs"
          }
        }
      }
    }
  }
  post {
    always {
      sh 'docker logout'
    }
  }
}